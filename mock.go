// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package architecture is a generated GoMock package.
package architecture

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockstorage is a mock of storage interface.
type Mockstorage struct {
	ctrl     *gomock.Controller
	recorder *MockstorageMockRecorder
}

// MockstorageMockRecorder is the mock recorder for Mockstorage.
type MockstorageMockRecorder struct {
	mock *Mockstorage
}

// NewMockstorage creates a new mock instance.
func NewMockstorage(ctrl *gomock.Controller) *Mockstorage {
	mock := &Mockstorage{ctrl: ctrl}
	mock.recorder = &MockstorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockstorage) EXPECT() *MockstorageMockRecorder {
	return m.recorder
}

// Retrieve mocks base method.
func (m *Mockstorage) Retrieve(idx int) Person {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", idx)
	ret0, _ := ret[0].(Person)
	return ret0
}

// Retrieve indicates an expected call of Retrieve.
func (mr *MockstorageMockRecorder) Retrieve(idx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*Mockstorage)(nil).Retrieve), idx)
}

// Save mocks base method.
func (m *Mockstorage) Save(idx int, p Person) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Save", idx, p)
}

// Save indicates an expected call of Save.
func (mr *MockstorageMockRecorder) Save(idx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*Mockstorage)(nil).Save), idx, p)
}
